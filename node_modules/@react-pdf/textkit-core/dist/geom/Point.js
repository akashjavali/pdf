"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Represents a 2d point
 */
var Point = function () {
  /** @public */
  function Point() {
    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    _classCallCheck(this, Point);

    /**
     * The x-coordinate of the point
     * @type {number}
     */
    this.x = x;

    /**
     * The y-coordinate of the point
     * @type {number}
     */
    this.y = y;
  }

  /**
   * Returns a copy of this point
   * @return {Point}
   */


  _createClass(Point, [{
    key: "copy",
    value: function copy() {
      return new Point(this.x, this.y);
    }
  }, {
    key: "transform",
    value: function transform(m0, m1, m2, m3, m4, m5) {
      var x = m0 * this.x + m2 * this.y + m4;
      var y = m1 * this.x + m3 * this.y + m5;
      return new Point(x, y);
    }
  }]);

  return Point;
}();

exports.default = Point;